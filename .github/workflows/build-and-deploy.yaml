name: CI/CD Release Pipeline
on: 
  push:
    branches:
      - main
jobs:
  build-hugo:
    runs-on: 'ubuntu-latest'
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4
		with:
			submodules: true
			fetch-depth: 0
           
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: Build Project
        run: hugo --minify

      - name: Release Assets
        uses: peaceiris/actions-gh-pages@v3
		    if: github.ref == 'refs/heads/main'
        with:
          personal_token: ${{ secrets.TOKEN }}
          publish_dir: ./public
		  
  terraform:
    name: 'Terraform'
	  env:
	    ARM_CLIENT_ID: ${{ secrets.AZURE_TF_CLIENT_ID }}
	    ARM_CLIENT_SECRET: ${{ secrets.AZURE_TF_CLIENT_SECRET }}
	    ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
	    ARM_TENANT_ID: ${{ secrets.AZURE_TF_TENANT_ID }}
	  runs-on: ubuntu-latest
	  environment: production
	
	  defaults:
	    run:
	      shell: bash
	
	  steps:
	  - name: 'Terraform Format'
	    uses: hashicorp/terraform-github-actions@master
	    with:
	      tf_actions_verson: 'latest'
		    tf_actions_subcommand: 'fmt'
		    tf_actions_working_dir: "./terraform"
		
	  - name: 'Terraform Init'
	    uses: hashicorp/terraform-github-actions@master
	    with:
	      tf_actions_version: 'latest'
		    tf_actions_subcommand: 'validate'
		    tf_actions_working_dir: "./terraform"
		
	  - name: 'Terraform Validate'
	    uses: hashicorp/terraform-github-actions@master
	    with:
	      tf_actions_version: 'latest'
		    tf_actions_subcommand: 'plan'
		    tf_actions_working_dir: "./terraform"
		
	  - name: 'Terraform Plan'
	    uses: hashicorp/terraform-github-actions@master
	    with:
	      tf_actions_verson: 'latest'
		    tf_actions_subcommand: 'plan'
		    tf_actions_working_dir: "./terraform"
		
	  - name: 'Terraform Apply'
	    if: github.ref == 'refs/heads/main'
	    uses: hashicorp/terraform-github-actions@master
	    with: 
	      tf_actions_version: 'latest'
		    tf_actions_subcommand: 'apply'
		    tf_actions_working_dir: "./terraform"

  upload-files:
	runs-on: ubuntu-latest
	needs: [build-hugo, terraform]

      - name: Azure Login
        uses: azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
		  
      - name: Upload Assets To Azure Blob Storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload-batch -d "\$web" -s ./public --connection-string "${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}" --overwrite true
                       
      - name: Purge Azure CDN Resources
        run:
          az cdn endpoint purge -n ${{ secrets.AZURE_CDN_ENDPOINT }} --profile-name ${{ secrets.AZURE_CDN_PROFILE_NAME }} --content-paths "/*" --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --no-wait
             
      - name: Dispose Azure Service Principal Session
        run: |
          az logout
