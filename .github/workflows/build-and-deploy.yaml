name: CI/CD Release Pipeline
on: 
  push:
    branches:
      - main
jobs:
  build-hugo:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
          token: ${{ secrets.TOKEN }}
           
      - name: Setup Hugo
        env:
          HUGO_VERSION: 0.120.4
        run: |
          mkdir ~/hugo
          cd ~/hugo
          curl -L "https://github.com/gohugoio/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_Linux-64bit.tar.gz" --output hugo.tar.gz
          tar -xvzf hugo.tar.gz
          sudo mv hugo /usr/local/bin
      - name: Setup Dependencies
        run: npm i

      - name: Build Site
        run: hugo --minify -d ./public
      
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_TF_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_TF_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TF_TENANT_ID }}
      TF_VERSION: 1.6.4
    runs-on: ubuntu-latest
    needs: build-hugo
    environment: production
  
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
  
    steps:
      - name: Checkout
        uses: actions/checkout@v4
    
      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
    
      - name: 'Terraform fmt'
        id: fmt
        run: terraform fmt -check
    
      - name: 'Terraform init'
        id: init
        run: |
          set -a
          source ../.env.backend
          terraform init \
            -backend-config="resource_group_name=$TF_VAR_state_resource_group_name" \
            -backend-config="storage_account_name=$TF_VAR_state_storage_account_name"

      - name: Terraform validate
        id: validate
        run: terraform validate -no-color
    
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -var-file="variables.tfvars"
    
      - name: Terraform apply
        id: apply
        run: terraform apply -auto-approve -var-file="variables.tfvars"

  upload-files:
    env:
      WORKING_DIRECTORY: .
    runs-on: ubuntu-latest
    needs: [build-hugo, terraform]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Upload to Azure Storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload-batch -d "\$web" -s ./public --connection-string "${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}" --overwrite true
                       
      - name: Purge Azure CDN Resources
        run:
          az cdn endpoint purge -n ${{ secrets.AZURE_CDN_ENDPOINT }} --profile-name ${{ secrets.AZURE_CDN_PROFILE_NAME }} --content-paths "/*" --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --no-wait
             
      - name: Dispose Azure Service Principal Session
        run: |
          az logout
  
  cypress-run:
    name: Cypress run
    needs: upload-files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cypress run
        uses: cypress-io/github-action@v6